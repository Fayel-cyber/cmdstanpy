name: CmdStanPy

on:
  push:
    branches:
      - 'develop'
      - 'master'
    tags:
      - '**'
  pull_request:
  workflow_dispatch:
    inputs:
      cmdstan-version:
        description: 'Version to test'
        required: false
        default: ''

jobs:

  cmdstanpy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (python)
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install codecov

      - name: Build wheel
        run: python setup.py bdist_wheel
        
      - name: Install wheel (Linux, macOS)
        if: matrix.os != 'windows-latest'
        run: pip install dist/*.whl

      
      - name: CmdStan installation cacheing
        uses: actions/cache@v2
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-${{ steps.system-info.outputs.release }}-cmdstan-${{ needs.get-cmdstan-version.outputs.version }}-${{ hashFiles('**/install_cmdstan.py') }} 
          
      - name: Install CmdStan (Linux, macOS)
        if: matrix.os != 'windows-latest'
        run: |
          install_cmdstan -h
          install_cxx_toolchain -h
          python -m cmdstanpy.install_cmdstan --version ${{ needs.get-cmdstan-version.outputs.version }}
      - name: Run tests
        run: |
          mkdir run_tests
          cd run_tests
          pytest -v ../test --cov=../cmdstanpy

      - name: Run model with requirements-optional.txt
        run: |
          cd run_tests
          python -m pip install -r ../requirements-optional.txt
          python ../test/example_script.py

      - name: Submit codecov
        run: |
          cd run_tests
          codecov
