name: ReleaseCmdStanPy

env:
  new_version: '0.9.68'
  old_version: '0.9.67'

on:
  push:
    branches:    
    - 'move-release-to-gh-actions'
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version, for example: 0.9.68'     
        required: true
        default: '0.9.68'
      old_version:
        description: 'Old version, for example: 0.9.67'
        required: true
        default: '0.9.67'

jobs:
  release-cmdstanpy:
    name: publish release and update read the docs default version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
      fail-fast: false
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (python)
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install codecov
          pip install sphinx

      - name: Create release branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git submodule update --init --recursive
          
          git checkout -b release/v${{ env.new_version }}
          sed -i 's/${{ env.old_version }}/${{ env.new_version }}/g' cmdstanpy/_version.py
          
          cd docsrc
          make github
          cd ..
          
          git commit -m "release/v${{ env.new_version }}: updating version numbers" -a
          git push -u origin release/v${{ env.new_version }}
          
          
