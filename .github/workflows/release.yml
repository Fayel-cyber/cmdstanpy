name: ReleaseCmdStanPy

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version, for example: 0.9.67'     
        required: true
      old_version:
        description: 'Old version, for example: 0.9.66'     
        required: true

jobs:
  release-cmdstanpy:
    name: publish release and read the docs update
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
      fail-fast: false
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Create release branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git checkout -b release/v${{ github.event.inputs.new_version }}
          sed -i 's/${{ github.event.inputs.old_version }}/${{ github.event.inputs.new_version }}/g' cmdstanpy/_version.py
          
          cd docsrc
          make github
          cd ..
          
          git commit -m "release/v${{ github.event.inputs.new_version }}: updating version numbers" -a
          git push -u origin release/v${{ github.event.inputs.new_version }}
          
          
